---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapi-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: webapi
  template:
    metadata:
      labels:
        app: webapi
    spec:
      containers:
        - name: webapi
          image: blazepac/webapi:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
          env:
            - name: MONGO_CONN
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MONGO_CONN
            - name: MONGO_PRIME
              value: "mongodb://mongodb-service:27017/test"
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: webapi-service
spec:
  type: LoadBalancer
  selector:
    app: webapi
  ports:
    - port: 8081
      targetPort: 8081
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db

      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  type: ClusterIP
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: blazepac/frontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
data:
  MONGO_CONN: bW9uZ29kYjovL21nZGI6dGE3WlQwUkc5a1NOeFhBSkBjbHVzdGVyMC1zaGFyZC0wMC0wMC5xd3Yway5tb25nb2RiLm5ldDoyNzAxNyxjbHVzdGVyMC1zaGFyZC0wMC0wMS5xd3Yway5tb25nb2RiLm5ldDoyNzAxNyxjbHVzdGVyMC1zaGFyZC0wMC0wMi5xd3Yway5tb25nb2RiLm5ldDoyNzAxNy9teUZpcnN0RGF0YWJhc2U/c3NsPXRydWUmcmVwbGljYVNldD1hdGxhcy1xODVoNTUtc2hhcmQtMCZhdXRoU291cmNlPWFkbWluJnJldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eQ0K
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: /data/mongodb

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
